[{"C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\styles\\global.ts":"1","C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\routes\\Route.tsx":"2","C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\services\\api.ts":"3","C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\pages\\ResetPassword\\index.tsx":"4","C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\pages\\Profile\\index.tsx":"5","C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\pages\\ResetPassword\\styles.ts":"6","C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\pages\\BarberDashboard\\styles.ts":"7","C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\components\\ToastContainer\\index.tsx":"8","C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\components\\ToastContainer\\styles.ts":"9","C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\components\\SwitchButton\\index.tsx":"10","C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\components\\Button\\styles.ts":"11","C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\components\\ToastContainer\\Toast\\index.tsx":"12","C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\components\\Tooltip\\styles.ts":"13","C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\pages\\UserDashboard\\index.tsx":"14","C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\hooks\\auth.tsx":"15","C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\pages\\UserDashboard\\styles.ts":"16","C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\hooks\\index.tsx":"17","C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\hooks\\toast.tsx":"18","C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\pages\\ForgotPassword\\index.tsx":"19","C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\pages\\SignIn\\styles.ts":"20","C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\pages\\ForgotPassword\\styles.ts":"21","C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\components\\Button\\index.tsx":"22","C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\components\\Input\\styles.ts":"23","C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\components\\AppointmentSelection\\index.tsx":"24","C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\components\\AppointmentSelection\\styles.ts":"25","C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\index.tsx":"26","C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\routes\\index.tsx":"27","C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\pages\\BarberDashboard\\index.tsx":"28","C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\components\\Input\\index.tsx":"29","C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\pages\\SignUp\\index.tsx":"30","C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\pages\\SignUp\\styles.ts":"31","C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\components\\SwitchButton\\styles.ts":"32","C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\pages\\Profile\\styles.ts":"33","C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\pages\\SignIn\\index.tsx":"34","C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\components\\HoursSelection\\index.tsx":"35","C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\components\\BarberSelection\\styles.ts":"36","C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\components\\BarberSelection\\index.tsx":"37","C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\components\\HoursSelection\\styles.ts":"38","C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\utils\\getValidationErrors.ts":"39"},{"size":463,"mtime":1606238367151,"results":"40","hashOfConfig":"41"},{"size":812,"mtime":1617364205044,"results":"42","hashOfConfig":"41"},{"size":116,"mtime":1606408944790,"results":"43","hashOfConfig":"41"},{"size":2966,"mtime":1611664396161,"results":"44","hashOfConfig":"41"},{"size":5720,"mtime":1617368913907,"results":"45","hashOfConfig":"41"},{"size":1824,"mtime":1611662751388,"results":"46","hashOfConfig":"41"},{"size":5557,"mtime":1617368851524,"results":"47","hashOfConfig":"41"},{"size":784,"mtime":1606671117650,"results":"48","hashOfConfig":"41"},{"size":162,"mtime":1606668386979,"results":"49","hashOfConfig":"41"},{"size":1419,"mtime":1617284703970,"results":"50","hashOfConfig":"41"},{"size":380,"mtime":1606246436984,"results":"51","hashOfConfig":"41"},{"size":1284,"mtime":1617283815765,"results":"52","hashOfConfig":"41"},{"size":675,"mtime":1606395797752,"results":"53","hashOfConfig":"41"},{"size":9094,"mtime":1619097056631,"results":"54","hashOfConfig":"41"},{"size":2289,"mtime":1618870153243,"results":"55","hashOfConfig":"41"},{"size":4942,"mtime":1618869006750,"results":"56","hashOfConfig":"41"},{"size":272,"mtime":1606666605385,"results":"57","hashOfConfig":"41"},{"size":1389,"mtime":1606668096070,"results":"58","hashOfConfig":"41"},{"size":2755,"mtime":1611248713479,"results":"59","hashOfConfig":"41"},{"size":2031,"mtime":1616611952147,"results":"60","hashOfConfig":"41"},{"size":1843,"mtime":1617285183674,"results":"61","hashOfConfig":"41"},{"size":379,"mtime":1611248801825,"results":"62","hashOfConfig":"41"},{"size":1105,"mtime":1616690848014,"results":"63","hashOfConfig":"41"},{"size":1324,"mtime":1618575239217,"results":"64","hashOfConfig":"41"},{"size":966,"mtime":1618323745759,"results":"65","hashOfConfig":"41"},{"size":198,"mtime":1606237806301,"results":"66","hashOfConfig":"41"},{"size":946,"mtime":1617369012848,"results":"67","hashOfConfig":"41"},{"size":7989,"mtime":1617367742158,"results":"68","hashOfConfig":"41"},{"size":1681,"mtime":1618763106384,"results":"69","hashOfConfig":"41"},{"size":3203,"mtime":1617364445139,"results":"70","hashOfConfig":"41"},{"size":1992,"mtime":1617280905056,"results":"71","hashOfConfig":"41"},{"size":1126,"mtime":1617284678373,"results":"72","hashOfConfig":"41"},{"size":2381,"mtime":1617368792580,"results":"73","hashOfConfig":"41"},{"size":3209,"mtime":1617364495849,"results":"74","hashOfConfig":"41"},{"size":2003,"mtime":1618750872641,"results":"75","hashOfConfig":"41"},{"size":1251,"mtime":1618764460365,"results":"76","hashOfConfig":"41"},{"size":2198,"mtime":1619097111064,"results":"77","hashOfConfig":"41"},{"size":1125,"mtime":1618498446282,"results":"78","hashOfConfig":"41"},{"size":320,"mtime":1606392945335,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"q151f1",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},"C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\styles\\global.ts",[],["167","168","169","170","171"],"C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\routes\\Route.tsx",[],"C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\services\\api.ts",[],["172","173","174","175","176"],"C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\pages\\ResetPassword\\index.tsx",[],["177","178","179","180","181"],"C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\pages\\Profile\\index.tsx",[],"C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\pages\\ResetPassword\\styles.ts",[],"C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\pages\\BarberDashboard\\styles.ts",[],"C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\components\\ToastContainer\\index.tsx",[],["182","183","184","185","186"],"C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\components\\ToastContainer\\styles.ts",[],["187","188","189","190","191"],"C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\components\\SwitchButton\\index.tsx",[],["192","193","194","195","196"],"C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\components\\Button\\styles.ts",[],"C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\components\\ToastContainer\\Toast\\index.tsx",[],"C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\components\\Tooltip\\styles.ts",[],"C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\pages\\UserDashboard\\index.tsx",["197"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { format, parseISO } from 'date-fns';\nimport DayPicker, { DayModifiers } from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\nimport Avatar from 'react-avatar';\n\nimport {\n  AiOutlineArrowDown,\n  AiOutlinePoweroff,\n  AiOutlineUser,\n} from 'react-icons/ai';\n\nimport { Link } from 'react-router-dom';\nimport { FormHandles } from '@unform/core';\nimport * as Yup from 'yup';\n\nimport { Form } from '@unform/web';\nimport { useAuth } from '../../hooks/auth';\nimport api from '../../services/api';\n\nimport { useToast } from '../../hooks/toast';\n\nimport {\n  Container,\n  Header,\n  HeaderContent,\n  Profile,\n  Content,\n  ServiceList,\n  DateAndHour,\n  Hour,\n  Calendar,\n  BarberList,\n} from './styles';\n\nimport logo from '../../assets/logo.svg';\n\nimport BarberSelection from '../../components/BarberSelection';\nimport AppointmentSelection from '../../components/AppointmentSelection';\nimport Button from '../../components/Button';\nimport HoursSelection from '../../components/HoursSelection';\nimport getValidationErrors from '../../utils/getValidationErrors';\nimport Input from '../../components/Input';\n\ninterface MonthAvailabilityItem {\n  day: number;\n  available: boolean;\n}\n\ninterface Appointment {\n  id: string;\n  service: string;\n  date: string;\n  hourFormatted: string;\n}\n\ninterface Barbers {\n  id: string;\n  name: string;\n  isBarber: boolean;\n  avatar_url: string;\n}\n\ninterface AppointmentFormData {\n  provider_id: string;\n  service: string;\n  date: string;\n}\n\nconst UserDashboard: React.FC = () => {\n  const { signOut, user } = useAuth();\n  const formRef = useRef<FormHandles>(null);\n  const { addToast } = useToast();\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [currentMonth, setCurrentMonth] = useState(new Date());\n  const [monthAvailability, setMonthAvailability] = useState<\n    MonthAvailabilityItem[]\n  >([]);\n\n  const [, setAppointments] = useState<Appointment[]>([]);\n  const [barbers, setBarbers] = useState<Barbers[]>([]);\n\n  const [serviceVisible, setServiceVisible] = useState(false);\n  const [calendarVisible, setCalendarVisible] = useState(false);\n  const [barberVisible, setBarberVisible] = useState(false);\n\n  const handleSubmit = useCallback(\n    async (data: AppointmentFormData) => {\n      try {\n        formRef.current?.setErrors({});\n\n        const schema = Yup.object().shape({\n          service: Yup.string().required('Selecione um serviço.'),\n          date: Yup.string().required('Informe uma data.'),\n          provider_id: Yup.string().required(),\n        });\n\n        console.log(data.provider_id);\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        await api.post('/appointments', data);\n\n        addToast({\n          type: 'success',\n          title: 'teste',\n          description: 'Dapadale na narguila!',\n        });\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n\n          formRef.current?.setErrors(errors);\n\n          return;\n        }\n        addToast({\n          type: 'error',\n          title: 'Erro ao confirmar agendamento',\n          description:\n            'Ocorreu um erro ao fazer o agendamento, verifique os dados!',\n        });\n      }\n    },\n    [addToast],\n  );\n\n  const handleDateChange = useCallback((day: Date, modifiers: DayModifiers) => {\n    if (modifiers.available && !modifiers.disabled) {\n      setSelectedDate(day);\n    }\n  }, []);\n\n  const handleMonthChange = useCallback((month: Date) => {\n    setCurrentMonth(month);\n  }, []);\n\n  useEffect(() => {\n    api\n      .get(`/providers/${user.id}/month-availability`, {\n        params: {\n          year: currentMonth.getFullYear(),\n          month: currentMonth.getMonth() + 1,\n        },\n      })\n      .then(response => {\n        setMonthAvailability(response.data);\n      });\n  }, [currentMonth, user.id]);\n\n  useEffect(() => {\n    api.get<Barbers[]>('/providers').then(response => {\n      const showBarbers = response.data\n        .filter(barber => barber.isBarber)\n        .map(barber => {\n          return {\n            ...barber,\n          };\n        });\n      setBarbers(showBarbers);\n    });\n  }, []);\n\n  useEffect(() => {\n    api\n      .get<Appointment[]>('/appointments/me', {\n        params: {\n          year: selectedDate.getFullYear(),\n          month: selectedDate.getMonth() + 1,\n          day: selectedDate.getDate(),\n        },\n      })\n      .then(response => {\n        const appointmentsFormatted = response.data.map(appointment => {\n          return {\n            ...appointment,\n            hourFormatted: format(parseISO(appointment.date), 'HH:mm'),\n          };\n        });\n        setAppointments(appointmentsFormatted);\n      });\n  }, [selectedDate]);\n\n  const disableDays = useMemo(() => {\n    const dates = monthAvailability\n      .filter(monthDay => monthDay.available === false)\n      .map(monthDay => {\n        const year = currentMonth.getFullYear();\n        const month = currentMonth.getMonth();\n\n        return new Date(year, month, monthDay.day);\n      });\n\n    return dates;\n  }, [currentMonth, monthAvailability]);\n\n  return (\n    <Container>\n      <Header>\n        <HeaderContent>\n          <img src={logo} alt=\"GoBarber\" />\n\n          <Profile key={user.id}>\n            {user.avatar_url ? (\n              <img src={user.avatar_url} alt={user.name} />\n            ) : (\n              <Avatar\n                name={user.name}\n                alt={user.name}\n                className=\"random-avatar\"\n                unstyled\n              />\n            )}\n            <div style={{ marginLeft: 16 }}>\n              <span>Bem vindo, </span>\n              <Link to=\"/profile\">\n                <strong>{user.name}</strong>\n              </Link>\n            </div>\n          </Profile>\n\n          <button style={{ marginRight: -450 }} type=\"button\">\n            <Link to=\"/profile\">\n              <AiOutlineUser />\n            </Link>\n          </button>\n\n          <button type=\"button\" onClick={signOut}>\n            <AiOutlinePoweroff />\n          </button>\n        </HeaderContent>\n      </Header>\n\n      <Form ref={formRef} onSubmit={handleSubmit}>\n        <Content>\n          <AppointmentSelection\n            title=\"Selecione o tipo de serviço\"\n            icon={AiOutlineArrowDown}\n            onClick={() => setServiceVisible(!serviceVisible)}\n          />\n          <ServiceList isVisible={serviceVisible}>\n            <Input name=\"service\" />\n          </ServiceList>\n          <AppointmentSelection\n            title=\"Escolha o horário e a data que deseja marcar\"\n            icon={AiOutlineArrowDown}\n            onClick={() => setCalendarVisible(!calendarVisible)}\n          />\n          <DateAndHour isVisible={calendarVisible}>\n            <Hour className=\"date-and-hour\">\n              <h2>Horários disponíveis :</h2>\n              <HoursSelection hour=\"08:00\" />\n              <HoursSelection hour=\"09:00\" />\n              <HoursSelection hour=\"10:00\" />\n              <HoursSelection hour=\"11:00\" />\n              <HoursSelection hour=\"12:00\" />\n              <HoursSelection hour=\"13:00\" />\n              <HoursSelection hour=\"14:00\" />\n              <HoursSelection hour=\"15:00\" />\n              <HoursSelection hour=\"16:00\" />\n              <HoursSelection hour=\"17:00\" />\n            </Hour>\n\n            <Calendar>\n              <DayPicker\n                weekdaysShort={['D', 'S', 'T', 'Q', 'Q', 'S', 'S']}\n                fromMonth={new Date()}\n                disabledDays={[{ daysOfWeek: [0, 6] }, ...disableDays]}\n                modifiers={{\n                  available: { daysOfWeek: [1, 2, 3, 4, 5] },\n                }}\n                onMonthChange={handleMonthChange}\n                selectedDays={selectedDate}\n                onDayClick={handleDateChange}\n                months={[\n                  'Janeiro',\n                  'Fevereiro',\n                  'Março',\n                  'Abril',\n                  'Maio',\n                  'Junho',\n                  'Julho',\n                  'Agosto',\n                  'Setembro',\n                  'Outubro',\n                  'Novembro',\n                  'Dezembro',\n                ]}\n              />\n            </Calendar>\n          </DateAndHour>\n\n          <AppointmentSelection\n            title=\"Escolha o barbeiro\"\n            icon={AiOutlineArrowDown}\n            onClick={() => setBarberVisible(!barberVisible)}\n          />\n\n          <BarberList isVisible={barberVisible}>\n            {barbers.map(barber => (\n              <BarberSelection\n                key={barber.id}\n                value={barber.id}\n                barberId=\"provider_id\"\n                name={barber.name}\n                avatar_url={barber.avatar_url}\n              />\n            ))}\n          </BarberList>\n\n          <Button type=\"submit\">Confirmar agendamento</Button>\n        </Content>\n      </Form>\n    </Container>\n  );\n};\n\nexport default UserDashboard;\n","C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\hooks\\auth.tsx",[],"C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\pages\\UserDashboard\\styles.ts",[],"C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\hooks\\index.tsx",[],"C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\hooks\\toast.tsx",[],"C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\pages\\ForgotPassword\\index.tsx",[],"C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\pages\\SignIn\\styles.ts",[],"C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\pages\\ForgotPassword\\styles.ts",[],["198","199","200","201","202"],"C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\components\\Button\\index.tsx",[],"C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\components\\Input\\styles.ts",[],"C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\components\\AppointmentSelection\\index.tsx",[],["203","204","205","206","207"],"C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\components\\AppointmentSelection\\styles.ts",[],"C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\index.tsx",[],"C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\routes\\index.tsx",[],"C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\pages\\BarberDashboard\\index.tsx",[],"C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\components\\Input\\index.tsx",[],"C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\pages\\SignUp\\index.tsx",[],"C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\pages\\SignUp\\styles.ts",[],"C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\components\\SwitchButton\\styles.ts",[],"C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\pages\\Profile\\styles.ts",[],"C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\pages\\SignIn\\index.tsx",[],"C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\components\\HoursSelection\\index.tsx",[],"C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\components\\BarberSelection\\styles.ts",[],"C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\components\\BarberSelection\\index.tsx",[],"C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\components\\HoursSelection\\styles.ts",[],"C:\\Users\\Matheus\\Desktop\\CursoGoStack\\aulas\\GoBarber\\Web\\src\\utils\\getValidationErrors.ts",[],{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","replacedBy":"215"},{"ruleId":"216","replacedBy":"217"},{"ruleId":"208","replacedBy":"218"},{"ruleId":"210","replacedBy":"219"},{"ruleId":"212","replacedBy":"220"},{"ruleId":"214","replacedBy":"221"},{"ruleId":"216","replacedBy":"222"},{"ruleId":"208","replacedBy":"223"},{"ruleId":"210","replacedBy":"224"},{"ruleId":"212","replacedBy":"225"},{"ruleId":"214","replacedBy":"226"},{"ruleId":"216","replacedBy":"227"},{"ruleId":"208","replacedBy":"228"},{"ruleId":"210","replacedBy":"229"},{"ruleId":"212","replacedBy":"230"},{"ruleId":"214","replacedBy":"231"},{"ruleId":"216","replacedBy":"232"},{"ruleId":"208","replacedBy":"233"},{"ruleId":"210","replacedBy":"234"},{"ruleId":"212","replacedBy":"235"},{"ruleId":"214","replacedBy":"236"},{"ruleId":"216","replacedBy":"237"},{"ruleId":"208","replacedBy":"238"},{"ruleId":"210","replacedBy":"239"},{"ruleId":"212","replacedBy":"240"},{"ruleId":"214","replacedBy":"241"},{"ruleId":"216","replacedBy":"242"},{"ruleId":"243","severity":1,"message":"244","line":109,"column":9,"nodeType":"245","messageId":"246","endLine":109,"endColumn":20},{"ruleId":"208","replacedBy":"247"},{"ruleId":"210","replacedBy":"248"},{"ruleId":"212","replacedBy":"249"},{"ruleId":"214","replacedBy":"250"},{"ruleId":"216","replacedBy":"251"},{"ruleId":"208","replacedBy":"252"},{"ruleId":"210","replacedBy":"253"},{"ruleId":"212","replacedBy":"254"},{"ruleId":"214","replacedBy":"255"},{"ruleId":"216","replacedBy":"256"},"lines-around-directive",["257"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],["257"],[],[],[],[],["257"],[],[],[],[],["257"],[],[],[],[],["257"],[],[],[],[],["257"],[],[],[],[],"no-console","Unexpected console statement.","MemberExpression","unexpected",["257"],[],[],[],[],["257"],[],[],[],[],"padding-line-between-statements"]